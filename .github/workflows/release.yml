name: Release

on:
  push:
    tags:
      - 'v*'  # Matches version tags like v1.0.0

permissions:
  contents: write
  id-token: write  # For secure access to GitHub resources

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure all tags and commits are fetched

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint and Format Code
        run: |
          pip install flake8 black
          black .  # Format code
          flake8 .  # Lint code to ensure standards

      - name: Run Tests
        run: |
          pip install pytest pytest-cov
          pytest --cov=app tests/  # Run tests and measure coverage

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build Streamlit App Package
        run: |
          python -m build

      - name: Generate Release README
        run: |
          cat << EOF > RELEASE_README.md
          # Streamlit App Release

          ## 🚀 Version ${{ steps.get_version.outputs.VERSION }}

          ### 📦 Installation

          ```bash
          pip install -r requirements.txt
          ```

          ### ✨ What's New

          - [List new features and improvements]

          ### 🐛 Bug Fixes

          - [List bug fixes]

          ### 📋 Dependencies

          - [List key dependencies]

          ### 🔗 Links

          - [Documentation](https://your-docs-url)
          - [Changelog](CHANGELOG.md)

          ### 📄 License

          [Your License]
          EOF

      - name: Generate Changelog
        run: |
          echo "# Changelog" > CHANGELOG.md
          echo "## Version ${{ steps.get_version.outputs.VERSION }}" >> CHANGELOG.md
          echo "- Auto-generated release notes." >> CHANGELOG.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: RELEASE_README.md
          draft: false
          prerelease: false

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: dist/
